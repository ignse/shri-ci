name: Create Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release Ticket
    needs: [test, docker]
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Changelog
        uses: Bullrich/generate-release-changelog@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Add information to the tracker
        uses: fjogeleit/http-request-action@master
        env:
          RELEASE_DESCRIPTION: "((${{ github.server_url }}/${{github.repository}}/releases/tag/${{ env.RELEASE_VERSION }} Release ${{ env.RELEASE_VERSION }})) has been made.\nRelease created by: ${{github.actor}}\n\nBuild Docker Image: ${{ env.RELEASE_VERSION }}_docker_img \n\nChangelog:\n ${{steps.Changelog.outputs.changelog}}\n\n Tests successfully done. ((${{ github.server_url }}/${{github.repository}}/actions/runs/${{ github.run_id }} see release log))"
        with:
          url: "https://api.tracker.yandex.net/v2/issues/"
          method: "POST"
          timeout: "30000"
          customHeaders: '{"Authorization": "OAuth ${{ secrets.TRACKER_TOKEN }}", "X-Org-ID": "${{ secrets.TRACKER_ORG_ID }}"}'
          data: '{
            "queue": {"key": "TMP"},
            "summary": "Release ${{ env.RELEASE_VERSION }} ",
            "description": ${{ toJson(env.RELEASE_DESCRIPTION) }}
          }'
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '^16.11.1'
      - run: npm i
      - name: Run tests
        id: tests
        run: npm test
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          tags: ${{ github.actor }}/simplewhale:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}